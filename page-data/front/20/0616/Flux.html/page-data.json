{
    "componentChunkName": "component---src-templates-blog-post-jsx",
    "path": "/front/20/0616/Flux.html",
    "result": {"data":{"site":{"siteMetadata":{"title":"marveloper.io","siteUrl":"https://marvelopers.github.io"}},"markdownRemark":{"id":"ac6477a0-e1fd-5a34-b19a-13ee0b2e37c1","excerpt":"MVC vs Flux MVC(Model View Controller) 패턴의 문제점인 양방향 데이터 흐름을 해결할 수 있습니다. Controller는 Model의 데이터를 조회하거나 업데이트하는 역할을 합니다. Model이 업데이트 되면, View는 화면에 반영합니다. View…","html":"<h2>MVC vs Flux</h2>\n<ul>\n<li>MVC(Model View Controller) 패턴의 문제점인 양방향 데이터 흐름을 해결할 수 있습니다.</li>\n</ul>\n<p>Controller는 Model의 데이터를 조회하거나 업데이트하는 역할을 합니다. Model이 업데이트 되면, View는 화면에 반영합니다. View 다른 Model를 업데이트 할 수도 있습니다.</p>\n<p>복잡하지 않은 어플리케이션에서는 양방향 데이터 흐름이 문제가 되지 않을 수 있지만, 어플리케이션이 복잡해지면 이야기가 달라집니다. 양방향 데이터 흐름은 새로운 기능이 추가 될 때에 시스템의 복잡도를 기하급수적으로 증가시키고, 예측 불가능한 코드를 만들게 됩니다.</p>\n<h3>Flux</h3>\n<p>단방향 데이터 흐름을 가지고 있으며 다음과 같이 데이터가 이동합니다.</p>\n<p>Action ➔ Dispatcher ➔ Store ➔ View ➔ Action</p>\n<p>react에서 인기있는 상태관리 라이브러리 Redux는 Flux를 구현한 라이브러리입니다.</p>\n<h4>Dispatcher</h4>\n<ul>\n<li>Flux의 모든 데이터 흐름을 관리하는 허브 역할을 합니다.</li>\n<li>전달된 Action을 파악하여, 등록된 콜백 함수를 실행하여 Store에 데이터를 전송합니다.</li>\n<li>Dispatcher는 전체 어플리케이션에서 한 개의 인스턴스만 사용됩니다.</li>\n</ul>\n<h4>Store</h4>\n<ul>\n<li>Application의 특정 도메인에 해당하는 상태를 관리하고 저장합니다.</li>\n<li>Store는 싱글톤으로 관리되며, 상태가 변경되면 View에 데이터를 전송합니다.</li>\n</ul>\n<h4>View</h4>\n<ul>\n<li>화면에 나타내는 역할과 자식 View로 데이터를 흘려보내는 뷰 컨트롤러 역할도 수행합니다.</li>\n</ul>\n<h4>Action</h4>\n<ul>\n<li>Action creator에서 만들어지며, Dispatcher에서 콜백함수가 실행되면 Store가 업데이트되고 데이터를 담은 객체를 인수로 전달합니다.</li>\n<li>전달되는 객체가 Action입니다.</li>\n</ul>","fields":{"dateStr":"2020.06.16","date":"2020-06-16T00:00:00.000Z","slug":"/front/20/0616/Flux.html"},"frontmatter":{"title":"[디자인패턴] Flux","tags":["frontend","Flux","ReactJs","Redux"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#mvc-vs-flux\">MVC vs Flux</a></p>\n<ul>\n<li>\n<p><a href=\"#flux\">Flux</a></p>\n<ul>\n<li><a href=\"#dispatcher\">Dispatcher</a></li>\n<li><a href=\"#store\">Store</a></li>\n<li><a href=\"#view\">View</a></li>\n<li><a href=\"#action\">Action</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>"}},"pageContext":{"slug":"/front/20/0616/Flux.html","date":"2020-06-16T00:00:00.000Z","previous":{"fields":{"slug":"/web/20/0529/webapi.html","date":"2020-05-29T00:00:00.000Z"},"frontmatter":{"title":"WebAPI 정리","category":"web"}},"next":{"fields":{"slug":"/react/20/1223/redux.html","date":"2020-06-23T00:00:00.000Z"},"frontmatter":{"title":"Redux","category":"react"}}}},
    "staticQueryHashes": ["3764592887"]}