{
    "componentChunkName": "component---src-templates-blog-post-jsx",
    "path": "/react/20/1211/redux_toolkit.html",
    "result": {"data":{"site":{"siteMetadata":{"title":"marveloper.io","siteUrl":"https://marvelopers.github.io"}},"markdownRemark":{"id":"7d22a04a-36a3-5588-8081-7cf814085cfe","excerpt":"about Redux Toolkit Redux 로직 작성을 위해 공식적으로 권장하는 방법이 Redux Toolkit이다. 목적 : 스토어 설정, 상태에 포함된 내용, 리듀서 빌드 방법 등을 처리하는 것 탄생 배경 : Redux store…","html":"<h2>about Redux Toolkit</h2>\n<p>Redux 로직 작성을 위해 공식적으로 권장하는 방법이 Redux Toolkit이다.</p>\n<ol>\n<li>목적 : 스토어 설정, 상태에 포함된 내용, 리듀서 빌드 방법 등을 처리하는 것</li>\n<li>탄생 배경 : Redux store의 복잡함, 많은 패키지 추가 구성을 원함, 보일러플레이트 지원을 요구함</li>\n<li>Redux Toolkit을 사용해야 하는 이유 : 더 쉽고 빠르게 코드를 작성할 수 있다. 유지보수하기 쉽게 만들어준다.</li>\n</ol>\n<h3>포함된 항목</h3>\n<p>Redux Toolkit</p>\n<h3>configureStore()</h3>\n<p>reducer를 자동으로 결합. createStore()를 래핑,</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">-</span><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createStore <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"redux\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> configureStore <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@reduxjs/toolkit\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Before</span>\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">configureStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  reducer <span class=\"token operator\">:</span> counter\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// After</span></code></pre></div>\n<h3>createAction()</h3>\n<p>action creator 제공</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> increment <span class=\"token operator\">=</span> <span class=\"token function\">createAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">'INCREMENT'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> decrement <span class=\"token operator\">=</span> <span class=\"token function\">createAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DECREMENT'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">counter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> increment<span class=\"token punctuation\">.</span>type<span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> decrement<span class=\"token punctuation\">.</span>type<span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    dafault<span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> Redux<span class=\"token punctuation\">.</span><span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">)</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'increment'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>createReducer()</h3>\n<p>switch문 대신에 자동으로 immer library를 사용한다. reducer는 초기 상태 값을 제공하고, 현재 액션과 관계없는 상태는 그대로 반환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> increment <span class=\"token operator\">=</span> <span class=\"token function\">createAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">'INCREMENT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> decrement <span class=\"token operator\">=</span> <span class=\"token function\">createAction</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DECREMENT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> counter <span class=\"token operator\">=</span> <span class=\"token function\">createReducer</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>increment<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token parameter\">state</span> <span class=\"token operator\">=></span> state <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">[</span>decrement<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token parameter\">state</span> <span class=\"token operator\">=></span> state <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4>createSlice()</h4>\n<ul>\n<li>자동 감속 기능의 세트, 슬라이스 이름, 초기 상태 값을 받아들이고 액션 제작자와 작업 유형 슬라이스 감속기를 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> counterSlice <span class=\"token operator\">=</span> <span class=\"token function\">creatSlice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'counter'</span><span class=\"token punctuation\">.</span>\n  initialState<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  reducers<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">increment</span><span class=\"token operator\">:</span> <span class=\"token parameter\">state</span> <span class=\"token operator\">=></span> state <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">decrement</span><span class=\"token operator\">:</span> <span class=\"token parameter\">state</span> <span class=\"token operator\">=></span> state <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">configureStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  reducer <span class=\"token operator\">:</span> counter\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'increment'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  store<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3>키워드</h3>\n<p>Simple (스토어 설정, 리듀서 생성, immer 업데이트 로직 ), Opinionated (), Powerful (불변 업데이트 로직을 작성하고 전체 상태 슬라이드를 자동으로 생성) , Effective (적은 코드로 더 많은 작업을 수행)</p>\n<h3>Adding Redux Toolkit to the Project</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  npm install @reduxjs<span class=\"token operator\">/</span>toolkit\n  yarn add @reduxjs<span class=\"token operator\">/</span>toolkit</code></pre></div>","fields":{"dateStr":"2020.12.11","date":"2020-12-11T00:00:00.000Z","slug":"/react/20/1211/redux_toolkit.html"},"frontmatter":{"title":"redux-toolkit","tags":["redux","redux-toolkit"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#about-redux-toolkit\">about Redux Toolkit</a></p>\n<ul>\n<li>\n<p><a href=\"#%ED%8F%AC%ED%95%A8%EB%90%9C-%ED%95%AD%EB%AA%A9\">포함된 항목</a></p>\n</li>\n<li>\n<p><a href=\"#configurestore\">configureStore()</a></p>\n</li>\n<li>\n<p><a href=\"#createaction\">createAction()</a></p>\n</li>\n<li>\n<p><a href=\"#createreducer\">createReducer()</a></p>\n<ul>\n<li><a href=\"#createslice\">createSlice()</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%82%A4%EC%9B%8C%EB%93%9C\">키워드</a></p>\n</li>\n<li>\n<p><a href=\"#adding-redux-toolkit-to-the-project\">Adding Redux Toolkit to the Project</a></p>\n</li>\n</ul>\n</li>\n</ul>"}},"pageContext":{"slug":"/react/20/1211/redux_toolkit.html","date":"2020-12-11T00:00:00.000Z","previous":{"fields":{"slug":"/marketing/20/1023/how_to_use_gtm.html","date":"2020-10-23T00:00:00.000Z"},"frontmatter":{"title":"React에서 GTM 스니펫 삽입하는 함수","category":"marketing"}},"next":{"fields":{"slug":"/react/20/0705/redux-saga.html","date":"2020-12-11T00:00:00.000Z"},"frontmatter":{"title":"redux-toolkit","category":"react"}}}},
    "staticQueryHashes": ["3764592887"]}